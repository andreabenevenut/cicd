name: linting-zip-terraform 

on: [push]

jobs:

  jobLint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.1.13
          poetry install
      - name: Run tests
        run: |
          PYTHONPATH=. poetry run pytest -v tests/
      - name: Run black
        run: poetry run black . --check --diff
      - name: Run isort
        run: poetry run isort . --check --diff
    
  jobTerraform:
    needs: [jobLint]
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan
      - name: Terraform Apply
        run: terraform apply -auto-approve
  
  jobBlob:
    needs: [jobTerraform]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: papeloto/action-zip@v1
        with:
          files: src/main.py
          dest: result.zip
      - uses: fixpoint/azblob-upload-artifact@v4
        with:
          connection-string: ${{ secrets.AZURE_CONNECTION_STRING }}
          name: result
          path: result.zip
          container: "brt"